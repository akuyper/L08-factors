---
title: "L08 Factors"
subtitle: "Data Science 1 with R (STAT 301-1)"
author: "YOUR NAME"

format:
  html:
    toc: true
    embed-resources: true
    code-fold: show
    link-external-newwindow: true

execute:
  warning: false
  
from: markdown+emoji 
---

::: {.callout-tip icon=false}

## Github Repo Link

To link to your github **repo**sitory, appropriately edit the example link below. Meaning replace `https://your-github-repo-url` with your github repo url. Suggest verifying the link works before submitting.

[https://your-github-repo-url](https://your-github-repo-url)

:::

## Overview

The goal of this lab is to learn how to deal with factors in R, specifically within the tidyverse (although many of these methods can be applied with base R functions as well). Factors are used to work with categorical variables, or variables that have a fixed and known set of possible values. We'll use the `forcats` package, which provides tools for dealing with categorical variables. 

For more information on the `forcats` package, see [`forcats` tidyverse homepage](http://forcats.tidyverse.org/reference/index.html).

## Load packages

You should always begin by loading all necessary packages towards the beginning of your document.

```{r}
#| label: load-pkgs
#| code-fold: false

# Loading package(s)

```

## Datasets 

We will be using the `gss_cat` dataset that is included in the `forcats` package. To view the documentation for the dataset, use `?gss_cat`.    

## Exercises

### Exercise 1 

The variable `marital` has 6 levels: `"No answer"`, `"Never married"`, `"Separated"`, `"Divorced"`, `"Widowed"`, `"Married"`.

Reorder the levels to be `"Married"`, `"Never married"`, `"Separated"`, `"Divorced"`, `"Widowed"`, `"No answer"`.

This should be done within `mutate()` and store this new dataset as `gss_clean`.

Prove this was successful by making a simple bar chart.

::: {.callout-tip icon="false"}
## Solution

YOUR SOLUTION HERE

:::

### Exercise 2

Starting from the `gss_clean` dataset from Exercise 1, change the level `"Never married"` to read as `"single"` and lowercase all the other levels ie: `"married"`, `"separated"`, ...

This should be done within the `gss_clean` dataset, ie: do not store as a new dataset, overwrite `gss_clean`.

Prove this was successful by making a simple bar chart.

::: {.callout-tip icon="false"}
## Solution

YOUR SOLUTION HERE

:::

### Exercise 3

The variable `race` has 4 levels: `"Other"`, `"Black"`, `"White"`, `"Not applicable"`

Using your `gss_clean` dataset, demonstrate how to add the additional level options: `"Hispanic"`, `"Asian"`, `"American Indian"`.

Prove this was successful by running the line of code `levels(gss_clean$race)`

::: {.callout-tip icon="false"}
## Solution

YOUR SOLUTION HERE

:::

### Exercise 4

What happens when you are defining levels in a `factor` with the `levels` argument and either do not define a level that exists in the dataset or have a typo in a level that exists in the dataset?  

::: {.callout-tip icon="false"}
## Solution

YOUR SOLUTION HERE

:::


### Exercise 5

Create a bar chart to explore the distribution of `rincome` (reported income). What makes the default bar chart hard to understand? Improve the bar chart.

::: {.callout-tip icon="false"}
## Solution

YOUR SOLUTION HERE

:::


### Exercise 6

The variable `year` is currently coded as an integer. Demonstrate how to convert this variable to a `factor`.

::: {.callout-tip icon="false"}
## Solution

YOUR SOLUTION HERE

:::

### Exercise 7

Demonstrate how to collapse `rincome` into a smaller set of categories.

::: {.callout-tip icon="false"}
## Solution

YOUR SOLUTION HERE

:::

## Graduate Challenge

::: callout-important

Graduate students are required to complete this challenge. **It is optional for undergraduate students.**

:::

Starting from the `gss_cat` dataset, complete Exercises 1 - 3 within the SAME `mutate` function and store as `gss_very_clean`.

::: {.callout-tip icon="false"}
## Solution

YOUR SOLUTION HERE

:::
